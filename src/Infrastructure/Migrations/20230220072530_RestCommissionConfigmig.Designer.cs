// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tawala.Infrastructure.Persistence;

namespace Tawala.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230220072530_RestCommissionConfigmig")]
    partial class RestCommissionConfigmig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.CategoryEni.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryPhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MainCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryPhotoId");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Identity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdminUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRestAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRestUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUser")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OtherPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhotoId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PhotoId1");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Notifications.AdminNotifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NotificationPhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationPhotoId");

                    b.ToTable("AdminNotifications");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Notifications.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Reservations.OccasionsReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("From")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Long")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccasionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RestOccasionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("To")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BranchId");

                    b.HasIndex("RestOccasionsId");

                    b.HasIndex("StatusId");

                    b.ToTable("OccasionsReservation");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Reservations.RestOccasions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestOccasions");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.AdminSettings.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.AdminSettings.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("District");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.AdminSettings.Regions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.AppAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppAttachment");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayNameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OptionSet");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OptionSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionSetId");

                    b.ToTable("OptionSetItem");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.Other.Complain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComplainDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ComplainStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ComplainTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComplainUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ComplainStatusId");

                    b.HasIndex("ComplainTypeId");

                    b.HasIndex("ComplainUserId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Complains");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.Other.ContactUs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.RestCommissionConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAmount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestCommissionConfigs");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.ServiceProvider.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Branchs");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.ServiceProvider.OpenDayes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("ClosedAt")
                        .HasColumnType("time");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("OpenAt")
                        .HasColumnType("time");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("OpenDayes");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AppBanerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Long")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBranches")
                        .HasColumnType("int");

                    b.Property<string>("OwnerUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RejectedReson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RestaurantTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResturantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResturantNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Snap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TickTok")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twiter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppBanerId");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("LogoId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("RegionsId");

                    b.HasIndex("RestaurantTypeId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.Settings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResposableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResposablePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("BuildingTypeId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.Floor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FloorNumberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FloorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("FloorNumberId");

                    b.HasIndex("FloorTypeId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BackGroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DefaultImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FloorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatBackGroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableBackGroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("hight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DefaultImageId");

                    b.HasIndex("FloorId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomImages");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DefaultImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DefaultNumberOfSet")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndAt")
                        .HasColumnType("time");

                    b.Property<decimal>("Hight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFriday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMonday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaturday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSunday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsThursday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWednesday")
                        .HasColumnType("bit");

                    b.Property<string>("JsonModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxNumberOfSet")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSet")
                        .HasColumnType("int");

                    b.Property<decimal>("PositionBottom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositionLeft")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositionRight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PositionTop")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("StandardPricePerSet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StandardPricePerTable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("StartAt")
                        .HasColumnType("time");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("TableTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("VipPricePerSet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VipPricePerTable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DefaultImageId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TableTypeId");

                    b.ToTable("RoomTables");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomTableImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomTableImages");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.menu.Items", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PhotoId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.menu.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppAttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppAttachmentId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.menu.MenuItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ItemsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemsId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Identity.AppIdentityRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppIdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tawala.Domain.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tawala.Domain.Entities.CategoryEni.Category", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "CategoryPhoto")
                        .WithMany()
                        .HasForeignKey("CategoryPhotoId");

                    b.HasOne("Tawala.Domain.Entities.CategoryEni.Category", "MainCategory")
                        .WithMany()
                        .HasForeignKey("MainCategoryId");

                    b.Navigation("CategoryPhoto");

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Identity.AppUser", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId1");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Notifications.AdminNotifications", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "NotificationPhoto")
                        .WithMany()
                        .HasForeignKey("NotificationPhotoId");

                    b.Navigation("NotificationPhoto");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Reservations.OccasionsReservation", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Identity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Tawala.Domain.Entities.Reservations.RestOccasions", "RestOccasions")
                        .WithMany()
                        .HasForeignKey("RestOccasionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("AppUser");

                    b.Navigation("Branch");

                    b.Navigation("RestOccasions");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Reservations.RestOccasions", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSet", "OptionSet")
                        .WithMany("OptionSetItems")
                        .HasForeignKey("OptionSetId");

                    b.Navigation("OptionSet");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.Other.Complain", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "ComplainStatus")
                        .WithMany()
                        .HasForeignKey("ComplainStatusId");

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "ComplainType")
                        .WithMany()
                        .HasForeignKey("ComplainTypeId");

                    b.HasOne("Tawala.Domain.Entities.Identity.AppUser", "ComplainUser")
                        .WithMany()
                        .HasForeignKey("ComplainUserId");

                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Branch");

                    b.Navigation("ComplainStatus");

                    b.Navigation("ComplainType");

                    b.Navigation("ComplainUser");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.Other.ContactUs", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.RestCommissionConfig", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.ServiceProvider.Branch", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AdminSettings.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Tawala.Domain.Entities.Settings.AdminSettings.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany("Branchs")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.ServiceProvider.OpenDayes", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany("OpenDayes")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "AppBaner")
                        .WithMany()
                        .HasForeignKey("AppBanerId");

                    b.HasOne("Tawala.Domain.Entities.Settings.AdminSettings.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Tawala.Domain.Entities.Settings.AdminSettings.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("Tawala.Domain.Entities.Identity.AppUser", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId");

                    b.HasOne("Tawala.Domain.Entities.Settings.AdminSettings.Regions", "Regions")
                        .WithMany()
                        .HasForeignKey("RegionsId");

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "RestaurantType")
                        .WithMany()
                        .HasForeignKey("RestaurantTypeId");

                    b.Navigation("AppBaner");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Logo");

                    b.Navigation("OwnerUser");

                    b.Navigation("Regions");

                    b.Navigation("RestaurantType");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.Building", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "BuildingType")
                        .WithMany()
                        .HasForeignKey("BuildingTypeId");

                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Branch");

                    b.Navigation("BuildingType");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.Floor", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.TawalhDesignWithConfig.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId");

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "FloorNumber")
                        .WithMany()
                        .HasForeignKey("FloorNumberId");

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "FloorType")
                        .WithMany()
                        .HasForeignKey("FloorTypeId");

                    b.Navigation("Building");

                    b.Navigation("FloorNumber");

                    b.Navigation("FloorType");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.Room", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "DefaultImage")
                        .WithMany()
                        .HasForeignKey("DefaultImageId");

                    b.HasOne("Tawala.Domain.Entities.TawalhDesignWithConfig.Floor", "Floor")
                        .WithMany()
                        .HasForeignKey("FloorId");

                    b.Navigation("DefaultImage");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomImages", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("Tawala.Domain.Entities.TawalhDesignWithConfig.Room", "Room")
                        .WithMany("RoomImages")
                        .HasForeignKey("RoomId");

                    b.Navigation("Image");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomTable", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "DefaultImage")
                        .WithMany()
                        .HasForeignKey("DefaultImageId");

                    b.HasOne("Tawala.Domain.Entities.TawalhDesignWithConfig.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.HasOne("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSetItem", "TableType")
                        .WithMany()
                        .HasForeignKey("TableTypeId");

                    b.Navigation("DefaultImage");

                    b.Navigation("Room");

                    b.Navigation("TableType");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomTableImages", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomTable", "Room")
                        .WithMany("RoomTableImages")
                        .HasForeignKey("RoomId");

                    b.Navigation("Image");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.menu.Items", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.CategoryEni.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId");

                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Category");

                    b.Navigation("Photo");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.menu.Menu", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.Settings.AppAttachment", "AppAttachment")
                        .WithMany()
                        .HasForeignKey("AppAttachmentId");

                    b.HasOne("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");

                    b.Navigation("AppAttachment");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.menu.MenuItems", b =>
                {
                    b.HasOne("Tawala.Domain.Entities.menu.Items", "Items")
                        .WithMany()
                        .HasForeignKey("ItemsId");

                    b.HasOne("Tawala.Domain.Entities.menu.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId");

                    b.Navigation("Items");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.OptionSetsEntities.OptionSet", b =>
                {
                    b.Navigation("OptionSetItems");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.Settings.ServiceProvider.Restaurant", b =>
                {
                    b.Navigation("Branchs");

                    b.Navigation("OpenDayes");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.Room", b =>
                {
                    b.Navigation("RoomImages");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.TawalhDesignWithConfig.RoomTable", b =>
                {
                    b.Navigation("RoomTableImages");
                });

            modelBuilder.Entity("Tawala.Domain.Entities.menu.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
