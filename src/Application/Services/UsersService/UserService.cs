//using Microsoft.AspNetCore.Identity;
//using Microsoft.AspNetCore.Identity.UI.Services;
//using Tawala.Application.Models.Auth.Users;
//using Tawala.Domain.Entities.Identity;
//using Tawala.Infrastructure.Common.Models;
//using Org.BouncyCastle.Asn1.Ocsp;
//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Security.Claims;
//using System.Text;
//using System.Text.Encodings.Web;
//using System.Threading.Tasks;

//namespace Tawala.Application.Services.UsersService
//{
//    public class UserService : IUserService
//    {
//        private readonly UserManager<AppUser> _userManager;
//        private readonly SignInManager<AppUser> _signInManager;
//        public UserService(UserManager<AppUser> userManager, SignInManager<AppUser> signInManager)
//        {
//            _userManager = userManager;
//            _signInManager = signInManager;
//        }

//        public Task<bool> Active(string id)
//        {
//            throw new NotImplementedException();
//        }

//        public Task<UserResDTO> ChangePassword(UserLoginDTO model)
//        {
//            throw new NotImplementedException();
//        }

//        public Task<bool> DeActive(string id)
//        {
//            throw new NotImplementedException();
//        }

//        public Task<UserResDTO> ForgetPassword(UserLoginDTO model)
//        {
//            throw new NotImplementedException();
//        }

//        public async Task<LoginResult> Login(UserLoginDTO model)
//        {

//            var user = await _userManager.FindByNameAsync(model.UserName);

//            if (user != null)
//            {
//                var result = new LoginResult();

//                if (await _userManager.CheckPasswordAsync(user, model.Password))
//                {
//                    // Rule #1
//                    if (!await _signInManager.CanSignInAsync(user))
//                    {
//                        result.Status = "Error";
//                        result.Message = "<li>Email confirmation required</li>";

//                        return result;
//                    }

//                    var signInResult = await _signInManager.PasswordSignInAsync(model.UserName, model.Password, true,
//                        lockoutOnFailure: false);

//                    if (signInResult.RequiresTwoFactor)
//                    {
//                        result.Status = "success";
//                        result.Message = "Enter the code generated by your authenticator app";
//                        result.Message = "new { requires2FA = true }";
//                        return result;
//                    }

//                    result.Status = signInResult == SignInResult.Success ? "Success" : "Error";
//                    result.Message = signInResult == SignInResult.Success ? $"Welcome {user.UserName}" : "Invalid login";
//                    //  result.Data = signInResult == SignInResult.Success ? (object)model : $"<li>Invalid login attempt - {signInResult}</li>";

//                    return result;
//                }

//                //result.Status = Status.Error;
//                //result.Data = $"<li>Invalid Username or Password</li>";

//                return result;
//            }
//            return null;

//        }

//        public async Task<RegisterResult> Register(UserAddDTO model)
//        {
//            //check if user is exist
//            IdentityResult result;
//            var user = await _userManager.FindByNameAsync(model.PhoneNumber);

//            if (user != null)
//            {
//                return new RegisterResult //in case user  is aready register
//                {
//                    Status = "error",
//                    Message = "هذا المستخدم مسجل من قبل"
//                };
//            }
//            //create user model
//            user = new AppUser
//            {
//                Id = Guid.NewGuid().ToString(),
//                UserName = model.PhoneNumber,
//                Email = model.Email,
//                FirstName = model.FirstName,
//                LastName = model.LastName,
//                MiddleName = model.MiddleName,
//                PhoneNumber = model.PhoneNumber,
//                OtherPhoneNumber = model.OtherPhoneNumber,
//                Address = model.Address,

//            };

//            result = await _userManager.CreateAsync(user, model.Password);
//            if (result.Succeeded)
//            {
//                if (model.IsUser)
//                {
//                    Claim trialClaim = new Claim("User", DateTime.Now.ToString());
//                    await _userManager.AddClaimAsync(user, trialClaim);
//                    await _userManager.AddToRoleAsync(user, "Admin");
//                }
//                else if (model.IsAdmin)
//                {
//                    await _userManager.AddToRoleAsync(user, "Admin");
//                }

//                var code = await _userManager.GenerateEmailConfirmationTokenAsync(user);

//                return new RegisterResult
//                {
//                    Status = "succes",
//                    Message = "تم التسجيل بنجاح برجاء التفعيل",
//                    Code = code,
//                };
//            }
//            else
//            {
//                var resultErrors = result.Errors.Select(e => e.Description).ToList();
//                return new RegisterResult
//                {
//                    Status = resultErrors.FirstOrDefault(),
//                    Message = "حدث خطاء"
//                };
//            }
//        }

//        public Task<UserResDTO> Update(UserUpdateDTO model)
//        {
//            throw new NotImplementedException();
//        }
//    }
//}

